---
- hosts: app01
  # become: true
  gather_facts: false
  vars:
    repo_folder: /tmp/app/
    repo_name: namesjc/getting-started

  tasks:
    - import_tasks: install-docker.yaml
      become: yes

    # - name: Copy code source from local
    #   copy:
    #     src: ./
    #     dest: "{{ repo_folder }}"

    - name: Clone source from git
      git:
        repo: https://github.com/{{ repo_name }}.git
        dest: "{{ repo_folder }}"
        update: yes

    - name: Tear down existing services
      community.docker.docker_compose:
        project_src: "{{ repo_folder }}"
        state: absent

    # - name: Create and start services from docker-compose file
    #   community.docker.docker_compose:
    #     project_src: "{{ repo_folder }}"
    #   register: output

    - name: Run with inline v2 compose
      community.docker.docker_compose:
        project_name: todos
        definition:
          version: "3.7"
          services:
            db:
              image: mysql:5.7
              volumes:
                - todo-mysql-data:/var/lib/mysql
              environment:
                MYSQL_ROOT_PASSWORD: secret
                MYSQL_DATABASE: todos

            app:
              image: node:12-alpine
              command: sh -c "yarn install && yarn run dev"
              volumes:
                - "{{ repo_folder }}:/app"
              ports:
                - "{{ hostvars[inventory_hostname].app_port }}:3000"
              working_dir: /app
              environment:
                MYSQL_HOST: mysql
                MYSQL_USER: root
                MYSQL_PASSWORD: secret
                MYSQL_DB: todos
              depends_on:
                - db
          volumes:
            todo-mysql-data:
      register: output

    - ansible.builtin.debug:
        var: output
